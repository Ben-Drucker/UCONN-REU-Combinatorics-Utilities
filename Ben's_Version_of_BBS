{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "def avail(elt,ls):\n",
    "    ind = ls.index(elt)\n",
    "    #print(\"***\", elt, ls,ind)\n",
    "    for ellt in ls[ind:]:\n",
    "        if ellt==0:\n",
    "            raw = ls[ind:].index(0)\n",
    "            return raw+(len(ls)-len(ls[ind:]))\n",
    "    return -1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "def BoxBallMove(Perm):\n",
    "    ls = []\n",
    "    for elt in Perm:\n",
    "        ls.append(elt)\n",
    "    print(ls)\n",
    "    for elt in range(1, len(Perm)+1):\n",
    "        if avail(elt, ls)==-1:\n",
    "            ls[ls.index(elt)]=0\n",
    "            ls.append(elt)\n",
    "        else:\n",
    "            origInd = ls.index(elt)\n",
    "            ls[avail(elt, ls)]=elt\n",
    "            ls[origInd]=0\n",
    "        print(ls)\n",
    "    return ls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "pi = [4,2,3,6,5,1,7]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4, 2, 3, 6, 5, 1, 7]\n",
      "[4, 2, 3, 6, 5, 0, 7, 1]\n",
      "[4, 0, 3, 6, 5, 2, 7, 1]\n",
      "[4, 0, 0, 6, 5, 2, 7, 1, 3]\n",
      "[0, 4, 0, 6, 5, 2, 7, 1, 3]\n",
      "[0, 4, 0, 6, 0, 2, 7, 1, 3, 5]\n",
      "[0, 4, 0, 0, 6, 2, 7, 1, 3, 5]\n",
      "[0, 4, 0, 0, 6, 2, 0, 1, 3, 5, 7]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0, 4, 0, 0, 6, 2, 0, 1, 3, 5, 7]"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BoxBallMove(pi)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "pii = Permutation(pi)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[4, 2, 1]"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pii.RS_partition()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "SageMath 9.1",
   "language": "sage",
   "name": "sagemath"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
